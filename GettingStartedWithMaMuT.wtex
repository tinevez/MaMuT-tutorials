<latex>
\documentclass{scrartcl}

\usepackage{libertine} 
\usepackage[libertine]{newtxmath}
\renewcommand{\familydefault}{\sfdefault}
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}

% Smaller font for teletype (texttt)
\usepackage{courier}

\usepackage{amssymb}
\usepackage{amsmath}
\usepackage{amsrefs}
\usepackage{funkey}
\usepackage{notation}
\usepackage{array}
\usepackage{menukeys}
\usepackage{hyperref}
\input{tikzstyles}
\usepackage{subfig}

% Put a dot after section number.
\usepackage{secdot}

% I want a proper degree symbol in text.
\usepackage{textcomp}       % additional symbols using companion encoding TS1
\usepackage{gensymb}        % provides macro \degree which works in text and math
\DeclareUnicodeCharacter{00B0}{\degree}

\newcommand\button[1]{\textit{#1}}
\newcommand\key[1]{\texttt{#1}}
\newcommand\screenshotA[1]{\centerline{\includegraphics[scale=0.5]{figures/#1}}}
\newcommand\screenshotB[1]{\centerline{\includegraphics[width=.8\textwidth]{figures/#1}}}
\newcommand\screenshotC[1]{\centerline{\includegraphics[width=.5\textwidth]{figures/#1}}}
\newcommand\screenshotTikz[1]{\centerline{\includetikz{figures/#1}}}
\newcommand\coloredlink[1]{\textcolor{blue!75!black}{\underline{\smash{#1}}}}
\newcommand\TODO[1]{\textcolor{red}{#1}}

% Small font in verbatime environment.
\makeatletter
\def\verbatim{\scriptsize\@verbatim \frenchspacing\@vobeyspaces \@xverbatim}
\makeatother

% Small images in text (for e.g. small icon).
\newcommand*{\smallimg}[1]{%
  \raisebox{-.3\baselineskip}{%
    \includegraphics[
      height=\baselineskip,
      width=\baselineskip,
      keepaspectratio,
    ]{figures/#1}%
  }%
}

% Less space when we make bullet lists.
\newenvironment{myitemize}
{ \begin{itemize}
    \setlength{\itemsep}{0pt}
    \setlength{\parskip}{0pt}
    \setlength{\parsep}{0pt}     }
{ \end{itemize}                  } 


\title{Getting started with MaMuT.}
\author{Tobias Pietzsch \& Jean-Yves Tinevez}

\begin{document}
\maketitle


This tutorial aims at getting you started with \href{http://imagej.net/MaMuT}{\coloredlink{MaMuT}}. We cover data preparation, and basic annotation process.


</latex>
<wiki>
__TOC__
</wiki>

\tableofcontents



\section{Installation.}
%————————————————————-

Well, thanks to the ImageJ \href{http://imagej.net/Updater}{\coloredlink{Updater}}, there is not much to do. Simply follow the instructions on how to \href{http://imagej.net/How_to_follow_a_3rd_party_update_site}{\coloredlink{follow a 3rd party site}}, and subscribe to the MaMuT update site.  

\screenshotA{MaMuT_UpdateSite.png}



\section{Data preparation.}
%————————————————————————-

MaMuT relies on and exploit the file format of the \href{http://imagej.net/BigDataViewer}{\coloredlink{BigDataViewer}}. You need to prepare your images so that can be opened in the \bdv and there is no way around it. Actually, MaMuT was written specifically as an annotation platform for the \bdv, specializing in cell lineaging. 

If you already have such a file, skip to the next section. Otherwise, we lazily rely on the excellent \bdv documentation and point directly to the \bdv instructions to prepare your images, depending on whether
\begin{itemize}
	\item they are \href{http://imagej.net/BigDataViewer#Exporting_from_ImageJ_Stacks}{\coloredlink{opened as an ImageJ stack}};
	\item they come from a \href{http://imagej.net/BigDataViewer#Integration_with_Fiji.27s_SPIMage_Processing_Tools}{\coloredlink{SPIM processing pipeline}}.
	\item \TODO{TODO [Tobias]: also refer to new \href{http://imagej.net/Multiview-Reconstruction}{\coloredlink{Multiview-Reconstruction}} datasets that are automatically in \bdv format. \bdv tutorial should also be updated in this regard.}
\end{itemize}



\section{Opening a dataset in MaMuT.}
%——————————————————————————————————-

We now assume that you have prepared your images, as if to open it in the Big Data Viewer. You should have a \texttt{.xml} file and a possibly very large \texttt{.h5} file on your computer. The \texttt{.xml} file must be the output of the \bdv data preparation. It should start with the following lines:
\begin{verbatim}
<?xml version="1.0" encoding="UTF-8"?>
<SpimData version="0.2">
  <BasePath type="relative">.</BasePath>
  <SequenceDescription>
    <ImageLoader format="bdv.hdf5">
      <hdf5 type="relative">MaMuT_Parhyale_demo.h5</hdf5>
...
\end{verbatim}

If you did not and want to rely on an example dataset for this tutorial, download it here: \coloredlink{TODO}. In the following, we assume that you are using this data.

Start MaMuT on this dataset by browsing to \menu{Plugins > MaMuT > Launch new MaMuT annotation}:

\screenshotA{MaMuT_MenuItems.png}

A file explorer window opens. Browse to the \texttt{.xml} file of the BDV file pair. After a little while, the MaMuT main GUI window opens:

\screenshotA{MaMuT_MainGUIWindow_beginning.png}

If you get this, so far so good. This is the main window of the GUI. It is split in 3 tabs but we will just focus on the first one for now. It controls the display of the data,
both for the image and for the annotations. It also used to launch Views of the data.

MaMuT offers three kind of views:
\begin{itemize}
  \item \smallimg{mammouth-32x32.png} \textbf{Mamut Viewer} is the main view that overlays the image data and 
  the annotations using the physical coordinate system. This is where you will
  mainly interact with the data, and create, edit and move spots around. This
  view is based on the \bdv.
  \item \smallimg{Icon3a_print_transparency.png} \textbf{TrackScheme} is the track browser, taken from TrackMate. It only
  shows the annotation data in a hierarchical way, discarding any physical location
  information. Tracks are laid out along time ranging from top to bottom, and 
  arranged from left to right according to their name. This view is useful to make
  sense of the annotation data, as well as to edit links between spots.
  \item \smallimg{sport_8ball.png} \textbf{3D Viewer} shows a 3D View of the annotation data in the physical
  coordinate system, without the image data. It is based on the \href{http://imagej.net/3D_Viewer}{\coloredlink{ImageJ 3D Viewer}}. 
\end{itemize}



\section{The MaMuT Viewer.}
%——————————————————————————

Let's start with the MaMuT Viewer. Click on its button on the GUI, the one with a
picture of a mammoth \smallimg{mammouth-32x32.png}. A \bdv window should appear. 

\screenshotC{MaMuT_ViewerExample.png}

The MaMuT viewer is really a \bdv window, so if you are familiar with this plugin, everything you know applies there. If are not, here is a recapitulation of how the \bdv works and how to interact with it.

A little word on the \bdv: The \bdv was made to deal with very large images of a sample possibly acquired from several different orientations (\eg rotating the sample in a SPIM). These different orientations (or views, but here we use this word for another notion) of the data amount to a new dimension. This dimension if more complex to handle than \eg multiple channels, because changing the acquisition orientation generates a data block which is not aligned with the other blocks (rotated, translated, and if you change the magnification, scaled), and does not have necessary the same size. As of today, only a limited numbers of image viewers can deal with multiple orientations, and the \bdv is one of them.

Each of these orientations generate a data block, that we call \emph{source} here. A source is monochromatic: if several fluorescence channels are captured under a single orientation, they each generate a source. The image data is not fully loaded in memory. It is cached efficiently following the caching strategy of the \bdv (detailed 
\href{http://imagej.net/BigDataViewer#About_the_BigDataViewer_data_format}
{\coloredlink{here}}).

The dataset we use for this tutorial is an excerpt from a long term time-lapse experiment done with a Zeiss LightSheet Z1, filming the development of a shrimp (\textit{Parhyale hawaiensis}) over several days. We have here the first 10 time-points, spreading over a bit more than 1 hour.  Three views were acquired that generated a source each:
\begin{myitemize}
	\item Angle 325° is the ventral-right view.
	\item Angle 280° is the ventral view.
	\item Angle 235° is the ventral-left view.
	\item Angle 0°, which is the first one in MaMuT, is the fused volume from all 3 input sources after spatiotemporal registration and multi-view deconvolution. 
\end{myitemize}

You can navigate through the data using the mouse and the keyboard. The key bindings can be redefined, but here are the default:
Switching from one source to another is done with the numeric keys \keys{1} ... \keys{0} for up to 10 views. Pressing \keys{F} switches to the fused mode, where all sources are overlaid. You can add and remove sources from the fused view by pressing \keys{Shift+1} - \etc. The color and brightness of each source are defined in the \textbf{brightness and color} panel, brought by pressing the \keys{S} key.

\screenshotB{MaMuT_ViewerBrightnessColor.png}
On this screenshot, we used the fused mode, toggle the first and third sources off (the deconvolved source and the angle 280°), and looked at the data in a XZ plane.

The MaMuT viewer also overlays some useful information:

\screenshotB{MaMuT_ViewerOverlays.pdf}

Navigating through the data in space and time uses the mouse and keyboard in a standard way: 

\textbf{To pan and zoom:}
\begin{myitemize}
	\item \keys{Right Drag} or \keys{Middle Drag} Move in the XY-plane of the view.
	\item \keys{Mousewheel} Move along the Z-axis of the view. Press \keys{Shift} or \keys{Control} to change the speed.
	\item \keys{Alt-Mousewheel} (Mac and Linux) or \keys{Ctrl-Shift-Mousewheel} (Windows) Zoom in and out.
	\item \keys{\textuparrow} / \keys{\textdownarrow} Zoom in / out. With \keys{Shift} fast zoom. With \keys{Control} slow zoom.
\end{myitemize}

\textbf{To orient, rotate the view:}
\begin{myitemize}
	\item \keys{Left Drag} Rotate around the point where the mouse was clicked.
	\item \keys{X} / \keys{Y} / \keys{Z} Select rotation axis.
	\item \keys{\textleftarrow} / \keys{\textrightarrow} Rotate clockwise / counter-clockwise around the choosen rotation axis.
	\item \keys{,} / \keys{.} Move forward / backward along the z-axis.
	\item \keys{Shift+X} Rotate to the ZY-plane of the current source (look along the x-axis of the current source).
	\item \keys{Shift+Y} or \keys{Shift+C} Rotate to the XZ-plane of the current source (look along the y-axis of the current source).
	\item \keys{Shift+Z} Rotate to the XY-plane of the current source (look along the z-axis of the current source).
\end{myitemize}

\textbf{To navigate in time:}
\begin{myitemize}
	\item \keys{N} Move to the previous time-point.
	\item \keys{M} Move to the next time-point.
	\item \keys{[} Jump to the previous time step.
	\item \keys{]} Jump to the next time step.
\end{myitemize}



\section{Annotating cells.}
%----------------------------


\subsection{Creating spots.}
%---------------------------

Using these commands, try to move the view around so that these cells are in sight.

\screenshotA{MaMuT_DesiredOrientation.png}

To do so, select the first source (angle 0°) and move the view in its XY place (press \keys{Shift+Z}). Then move in Z to the top of the embryo (around Z=1800) and finally zoom to bring about 50 cells in view. If you move in time, you can see that a lot of cell divisions are happening there. We will now build their lineage.

Move the mouse pointer over the cell you want to annotation, and press \keys{A}. A magenta circle should appear, representing a cell or more generally, a spot. Spots are created, edited and removed using the following default key bindings:

\begin{myitemize}
	\item \keys{A} to add a spot at the mouse location.
	\item \keys{D} to delete the spot under the mouse location.
	\item \keys{Q} / \keys{E} to decrease / increase the spot radius. Use \keys{Shift} / \keys{Control} to change the radius by a greater / smaller amount.
	\keys{Space} is used to move a spot in the XY view plane: put the mouse pointer inside the spot you want to move, then press and hold space while moving the mouse. The spot will follow your mouse until you release the \keys{Space} key.
\end{myitemize}

Spots represents point of interest (in our case, cells) under the shape of a sphere. You can change the sphere time-point, location and radius, but that's it. There is no object contour in MaMuT. Spots are drawn as circles in the MaMuT viewer, with the radius of their intersection with the view XY plane. If they are not intersecting with the view plane, they are drawn as small dots, as you can see by moving along Z a bit.


\subsection{Using multiple viewers to position spots.}
%-----------------------------------------------------

Accurately placing a spot in 3D can be difficult. This is where using multiple views in MaMut can help. On the main GUI window, click on the \smallimg{mammouth-32x32.png} \textbf{Mamut Viewer} button again to open a new view. This new view might not be showing the spot you just added. Fortunately, all views can be brought in sync by clicking inside a spot.

In the first view, click on the spot you added. The second view is translated so that this very spot is brought at the center of the view window. Rotate around this point so as to show the YZ plane of the source (press \keys{Shift+X}) and zoom close to the spot, to have a view pair resembling this:

\screenshotA{MaMuT_MultipleViews.png}

Just to ensure we are looking at the same spot in the two views, we checked the \textbf{Display spots names} button in the main GUI. Use the \keys{Space} key to move the spot around in a plane until you are happy with its location. This view combination is useful to place properly spots in 3D. You can open as many views as you want. Other views can be used \eg to have an overview of the data using a dezoomed view.

Spots can also be created with a double-click of the mouse. So if we recapitulate:
\begin{myitemize}
	\item \keys{Left Click} inside a spot to select it and center all views at this spot.
	\item \keys{Double Left Click} outside any spot to create a new one at the mouse location.
\end{myitemize}


\subsection{Display settings for spots.}
%---------------------------------------

Now is a good time to talk a little bit on how we control the look of spots on the MaMuT viewer. All the MaMuT are in sync and they share common display settings. It is not possible to separately tune the display of each view. Display settings for spots can be tuned on the main GUI window, in the top part of the \textbf{Views} tab. Here you can toggle the visibility of all spots, make their name appear. The display radius simple change their apparent radius on the MaMuT viewer. This display setting has no impact on subsequent analysis and apart from visibility tidiness, it will have its utility later. 

The spot coloring uses the notion of \emph{numerical features}. In MaMuT, and as in TrackMate, each annotation object can have several numerical, scalar features associated. For instance a spot can have features like X, Y, Z for its position, \etc. The drop-box  menu \textbf{Set color by} lets you choose the feature you want to use for the spot color. The color range below the menu shows you the min and max value for the feature you picked over all the dataset and interpolate from blue to red with a jet color-map. If you scroll through the menu, you can see that the features available are sorted in three categories: \texttt{spot features}, \texttt{default} and \texttt{track features}. \texttt{Spot features} is the category where you can find all the numerical features that relate to single spots, like their position, radius, \etc. In \texttt{default}, colors are not picked from a numerical feature, but either all the same (uniform color) or set manually (we will see later how). The \texttt{track feature category} is special: it gives to spots the color taken from the feature of the \emph{track} they belong to.

\screenshotB{MaMuT_ConfigureSpotDisplay.pdf}

By default, the range of the color scale is taken from the minimal to the maximal feature value. This can be changed by double-clicking on the \textbf{Set color by}, which will bring a window where you can set the min and max manually. 

\screenshotC{MaMuT_ConfigureFeatureRange.pdf}



\section{Linking cells across time.}
%-----------------------------------


\subsection{The data structure behind MaMuT.}
%--------------------------------------------

We propagate the identity of a cell over time using several spots in several time-points, connected from one to its successor by \emph{links}. Particle-linking algorithms are algorithms that find automatically what are the right links from one time-point to another given a set of spots spread over several time-points. Of course, the definition of "right" depends on the specificity of the algorithm. Tracking is the process of finding automatically all spots in an 2D+T or 3D+T image, and linking them. MaMuT does not do fully automatic tracking. It is a tool that specializes in manual or semi-automatic tracking, privileging data exploration and manual annotation on very large images. However, we will show in another tutorial how to import the results of automated tracking algorithms in MaMuT, so that they can be verified and curated. Here, we limit ourselves to manual and semi-automatic tracking. 

A link is a directed relationship from a spot, called the source, to another spot, called the target. The source spot is always the predecessor in time, so links always point towards increasing time. All the spots that can be reached from a spot by crossing links form what is called a \emph{track}. In our case, a track represents a single cell lineage. 

The actual data structure behind the annotations in MaMuT (and TrackMate) is a \emph{simple directed graph}. A graph is a mathematical structure made of vertices (in our case, spots representing cells) connected by edges (in our case, links representing propagation of identify across several time-points). The graph is \emph{simple} because it is forbidden to have more than one link between two spots, and that a link cannot link a spot to itself. It is \emph{directed} because links have a direction, following increasing time. In MaMuT, we added an extra constraint that forbids the existence of a link between two spots belonging to the same time-point, but otherwise this data structure is very standard. 

So a link can be created between any two spots, provided they do not belong to the same time-point. There is no other restriction. For instance, a spot can be the source of several links. If there is two outgoing links from a spot, they may represent a cell division (mother cell linked to its two daughters). Several source spots can be linked to a single common target spot, though the biological meaning of this is less evident. MaMuT does not put constraints on the number of links going from or to a spot. We reasoned that MaMuT is to be used to build generic graph-like annotations, and that the subsequent analysis should be specific to the biological context. For instance, for cell lineaging there should be at most two outgoing links from a source spot, and at most one ingoing link on a target spot.


\subsection{Creating and removing links.}
%----------------------------------------

In the MaMuT Viewer, only spots are selectable with the mouse. To create or remove a link, you have to select exactly two spots. 
\begin{myitemize}
	\item Select a spot by clicking inside it.
	\item Move to another time-point (\keys{N}, \keys{M}, \keys{[}, \keys{]}, the time slider).
	\item Add a second spot to the selection by shift-clicking inside it. 
	\item Press \keys{L} to add a link between these two spots, or to remove it already exists.
\end{myitemize}

So here are the two new useful bindings for \textbf{editing links}:
\begin{myitemize}
	\item \keys{Shift-Left Click} add and remove spots from the selection.
	\item \keys{L} toggle a link between the two spots of the selection. This does nothing if there is not exactly two spots in the selection. 
\end{myitemize}

Now go back to your MaMuT session, with the data oriented as aid above, and try to annotate and link the cell that divides between the first and second time-point. The mother cell can be found around X=1095, Y=1020, Z=1820 and t=0. On the image below, we tracked the daughter cell that emerges from the division on the left part of the view.

\screenshotB{MaMuT_DesiredTracking_1.PNG}

Note that when you create a link with this method, after link creating the selection is set to be made of only the last spot added. To create the next link, you just have to add the target spot to the selection, the source spot is already in. But still, after creating links over only 10 time-points, lets recognize that this is probably not the best way to quickly create a lineage. This method is probably best suited to edit an existing annotation.


\subsection{The auto-linking mode.}
%----------------------------------

Press \keys{Shift-L} with a MaMuT viewer window active. A message should appear in the 
MaMuT viewer that states the auto-linking mode is now on. In this mode, a link is automatically created when you create a new spot between this spot and the last one in the selection. Then the selection is changed to be the last spot added. Using this, you can quickly create lineage by moving forward in time with the keyboard and creating spots by typing \keys{A}. You can also use \keys{Double Click} to create spots, but because a simple click would clear the selection, you have to hold the \keys{Shift} key down to use auto-linking with mouse clicks.

Try to use the auto-linking mode to create the cell lineage of the dividing cell above, this time following the other daughter cell. Move back to the first time-point, select the mother cell, move to the second time-point \keys{M} and add a spot \keys{A} or \keys{Shift-Double Click} on the cell location. Repeat by following the right daughter cell. You should end up with an annotation that resembles the following:

\screenshotB{MaMuT_DesiredTracking_2.PNG}

At this stage, your first track has two branches: the first cell at t=0 divides into two daughters, and each daughter makes a branch in the track. You do not have to specify to what track you want to branch from. Tracks are automatically merged and split when you add or remove links. The only editing you have to do is at the link level, and track are discovered from the spots connected by the links you created.


\subsection{Display settings for tracks.}
%---------------------------------------

Notice that the look of tracks (represented by a straight line for each link) can be tuned in the same way spots are. 

\screenshotB{MaMuT_ConfigureTrackDisplay.pdf}

Track coloring uses the same feature system than for spots. There are scalar numerical features associated to tracks and they are used to generate a color from a jet colormap. However, there is two kind of features for tracks:
\begin{myitemize}
	\item There are \emph{track features}, defined for whole tracks. For instance: the number of spots in a track, the displacement from the start to the end of track, \etc. If you pick a track feature, all the links of a track will share the same color.
	\item There are \emph{edge features}, defined for a single link. These are features that are simply defined by a link between two spots, for instance, the instantaneous velocity for the link. Then each link may be of a different color.
\end{myitemize}

There is also a \emph{default} category, like for spots, that allow for using a uniform color or to use link colors set manually elsewhere.



\section{TrackScheme.}
%---------------------

TrackScheme is the second view offered in MaMuT. It can be seen as a lineage visualizer or editor. In TrackScheme, the image data as well as the spatial location of spots are completely discarded in favor of a hierarchical layout that highlights how cells divide in time.

In the main MaMuT GUI window, click on the \smallimg{Icon3a_print_transparency.png} \textbf{TrackScheme} button. A new window should appear, with the following content.

\screenshotC{MaMuT_TrackSchemeStart.png}

In TrackScheme, tracks are arranged from left to right and time runs from top to bottom. At this time we just have a single track, with two branches. The cell we tracked divides immediately after the first time-point, which is represented in TrackScheme by a fork going down. Each branch below this fork represents the annotation of a daughter cell. However, all the spots and links for these two daughter cells still belong to the same track, as they are connected \emph{via} the mother cell.

Though this view is very synthetic, there is a lot you can do with TrackMate. 


\subsection{Moving around in TrackScheme.}
%-----------------------------------------

Moving around is done classically with the mouse, and the panning is triggered by holding down the \keys{Shift} and \keys{Control} keys:
\begin{myitemize}
	\item \keys{Mousewheel} scrolls up and down.
	\item \keys{Shift-Mousewheel} scrolls left and right.
	\item \keys{Control-Shift-Mouse drag} pans the view.

\end{myitemize}




<latex>
\end{document}
</latex>
% vim::set expandtab tabstop=4 softtabstop=2 shiftwidth=2 ft=tex:
